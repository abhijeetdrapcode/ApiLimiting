<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Landing Page</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <style>
        body {
            background-color: slategray;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="jumbotron text-center mt-5">
            <h1 class="display-4">Welcome to the API Test Page</h1>
            <p class="lead">Click the buttons below to test the APIs</p>
            <hr class="my-4">
            <button id="apiTest1" class="btn btn-primary btn-lg mr-2">API Test 1</button>
            <button id="apiTest2" class="btn btn-secondary btn-lg">API Test 2</button>
        </div>
    </div>

    <script>
        const socket = io();

        function setCookie(name, value, maxAgeSeconds) {
            const date = new Date();
            date.setTime(date.getTime() + (maxAgeSeconds * 1000));
            document.cookie = `${name}=${value}; expires=${date.toUTCString()}; path=/`;
        }

        function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return parts.pop().split(';').shift();
        }

        socket.on('newToken', (data) => {
            console.log('Received new token:', data.token);
            setCookie('token', data.token, 3600); 
        });

        async function fetchData(apiUrl) {
            try {
                const token = getCookie('token');
                if (!token) {
                    console.log('No token found, requesting a new token...');
                    socket.emit('requestNewToken');
                    return;
                }

                const response = await axios.get(apiUrl, {
                    headers: {
                        'x-auth-token': token
                    }
                });
                console.log('Response data:', response.data);
                alert('API Response: ' + JSON.stringify(response.data));
            } catch (error) {
                console.error('Error:', error.message);
                if (error.response && error.response.status === 401) {
                    console.log('Token expired, requesting a new token...');
                    socket.emit('requestNewToken');
                } else {
                    alert('An error occurred while fetching the data');
                }
            }
        }

        document.getElementById('apiTest1').addEventListener('click', () => {
            socket.emit('buttonClick', { buttonId: 'apiTest1' });
            fetchData('http://localhost:4000/api/test1');
        });

        document.getElementById('apiTest2').addEventListener('click', () => {
            socket.emit('buttonClick', { buttonId: 'apiTest2' });
            fetchData('http://localhost:4000/api/test2');
        });
    </script>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>